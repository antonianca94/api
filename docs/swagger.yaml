basePath: /
definitions:
  controllers.Cart:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      users_id:
        type: integer
    type: object
  controllers.CartItem:
    properties:
      cart_id:
        type: integer
      id:
        type: integer
      products_id:
        type: integer
      quantity:
        type: integer
    type: object
  controllers.CartWithItems:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/controllers.CartItem'
        type: array
      users_id:
        type: integer
    type: object
  controllers.Category:
    properties:
      description:
        type: string
      id:
        type: integer
      id_categories_products:
        type: integer
      name:
        type: string
    type: object
  controllers.Image:
    properties:
      id:
        type: integer
      name:
        type: string
      path:
        type: string
      products_id:
        type: integer
      type:
        type: string
    type: object
  controllers.Product:
    properties:
      category_name:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      sku:
        type: string
      users_id:
        type: integer
    type: object
  controllers.ProductCreate:
    properties:
      categories_product_id:
        type: integer
      name:
        type: string
      price:
        type: string
      quantity:
        type: string
      sku:
        type: string
      users_id:
        type: integer
    type: object
  controllers.ProductUpdate:
    properties:
      categories_product_id:
        type: integer
      name:
        type: string
      price:
        type: string
      quantity:
        type: string
    type: object
  controllers.Role:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  controllers.User:
    properties:
      cpf:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role_name:
        type: string
      roles_id:
        type: integer
      status:
        type: integer
      surname:
        type: string
      username:
        type: string
    type: object
  controllers.UserDetails:
    properties:
      cpf:
        type: string
      name:
        type: string
      password:
        type: string
      role_name:
        type: string
      roles_id:
        type: integer
      status:
        type: integer
      surname:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  controllers.Vendor:
    properties:
      address:
        type: string
      cep:
        type: string
      city:
        type: string
      cnpj:
        type: string
      country:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      state:
        type: string
      users_id:
        type: integer
    type: object
host: localhost:3002
info:
  contact: {}
  description: API para gerenciar o sistema Agrofood.
  title: API do AgroFood
  version: "1.0"
paths:
  /cart:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Cart'
            type: array
      summary: Lista todos os Carrinhos de Compras
      tags:
      - Cart
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados do novo Carrinho
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/controllers.Cart'
      produces:
      - application/json
      responses:
        "201":
          description: Carrinho criado com sucesso
          schema:
            $ref: '#/definitions/controllers.Cart'
        "400":
          description: Dados de entrada inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao criar carrinho
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria um novo Carrinho de Compras
      tags:
      - Cart
  /cart/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID do carrinho
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Carrinho deletado com sucesso
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Carrinho não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Falha ao deletar carrinho
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deleta um carrinho pelo ID
      tags:
      - Cart
    get:
      consumes:
      - application/json
      parameters:
      - description: ID do carrinho
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Cart'
        "404":
          description: Carrinho não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Falha ao buscar carrinho
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca um carrinho pelo ID
      tags:
      - Cart
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID do Carrinho
        in: path
        name: id
        required: true
        type: integer
      - description: Dados do Carrinho para atualização parcial
        in: body
        name: cart
        required: true
        schema:
          $ref: '#/definitions/controllers.Cart'
      produces:
      - application/json
      responses:
        "200":
          description: Carrinho atualizado com sucesso
          schema:
            $ref: '#/definitions/controllers.Cart'
        "400":
          description: ID inválido ou dados de entrada inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Carrinho não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao atualizar carrinho
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualiza parcialmente um Carrinho pelo ID
      tags:
      - Cart
  /cart/{id}/items:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID do carrinho
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CartWithItems'
        "404":
          description: Carrinho não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Falha ao buscar carrinho
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca um carrinho com todos os seus itens
      tags:
      - Cart
  /cart/cart-items:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.CartItem'
            type: array
      summary: Lista todos os Itens do Carrinho
      tags:
      - CartItems
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados do novo Item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/controllers.CartItem'
      produces:
      - application/json
      responses:
        "201":
          description: Item criado com sucesso
          schema:
            $ref: '#/definitions/controllers.CartItem'
        "400":
          description: Dados de entrada inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao criar item
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria um novo Item do Carrinho
      tags:
      - CartItems
  /cart/cart-items/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID do item
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Item deletado com sucesso
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Item não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Falha ao deletar item
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deleta um item do carrinho pelo ID
      tags:
      - CartItems
    get:
      consumes:
      - application/json
      parameters:
      - description: ID do item
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CartItem'
        "404":
          description: Item não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Falha ao buscar item
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca um item do carrinho pelo ID
      tags:
      - CartItems
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID do Item
        in: path
        name: id
        required: true
        type: integer
      - description: Dados do Item para atualização parcial
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/controllers.CartItem'
      produces:
      - application/json
      responses:
        "200":
          description: Item atualizado com sucesso
          schema:
            $ref: '#/definitions/controllers.CartItem'
        "400":
          description: ID inválido ou dados de entrada inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Item não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao atualizar item
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualiza parcialmente um Item pelo ID
      tags:
      - CartItems
  /cart/user/{user_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID do usuário
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Cart'
        "404":
          description: Carrinho não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Falha ao buscar carrinho
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca um carrinho pelo ID do usuário
      tags:
      - Cart
  /categories:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Category'
            type: array
      summary: Lista todas as Categorias
      tags:
      - Categories
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados da nova Categoria
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/controllers.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Categoria criada com sucesso
          schema:
            $ref: '#/definitions/controllers.Category'
        "400":
          description: Dados de entrada inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao criar Categoria
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria uma nova Categoria
      tags:
      - Categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID da categoria
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Category deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Category not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to delete category
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deleta uma categoria pelo ID
      tags:
      - Categories
    get:
      consumes:
      - application/json
      parameters:
      - description: ID da categoria
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Category'
        "404":
          description: Categoria não encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Falha ao buscar categoria
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca uma categoria pelo ID
      tags:
      - Categories
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID da Categoria
        in: path
        name: id
        required: true
        type: integer
      - description: Dados da Categoria para atualização parcial
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/controllers.Category'
      produces:
      - application/json
      responses:
        "200":
          description: Categoria atualizada com sucesso
          schema:
            $ref: '#/definitions/controllers.Category'
        "400":
          description: ID inválido ou dados de entrada inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Categoria não encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao atualizar Categoria
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualiza parcialmente uma Categoria pelo ID
      tags:
      - Categories
  /images:
    post:
      consumes:
      - application/json
      description: Cria uma nova imagem associada a um produto
      parameters:
      - description: Dados da imagem
        in: body
        name: image
        required: true
        schema:
          $ref: '#/definitions/controllers.Image'
      produces:
      - application/json
      responses:
        "201":
          description: Imagem criada com sucesso
          schema:
            $ref: '#/definitions/controllers.Image'
        "400":
          description: Dados inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao criar imagem
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Criar imagem do produto
      tags:
      - Images
  /images/{id}:
    delete:
      description: Exclui uma imagem pelo ID
      parameters:
      - description: ID da imagem
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Imagem excluída com sucesso
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: ID inválido
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Imagem não encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao excluir imagem
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Excluir imagem
      tags:
      - Images
  /images/{product_id}:
    get:
      description: Obtém as imagens associadas a um produto específico
      parameters:
      - description: ID do Produto
        in: path
        name: product_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Image'
            type: array
        "404":
          description: Imagem não encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao buscar imagem
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter imagem do produto
      tags:
      - Images
  /images/{product_id}/type:
    get:
      description: Obtém as imagens de um produto específico filtradas por tipo
      parameters:
      - description: ID do Produto
        in: path
        name: product_id
        required: true
        type: integer
      - description: Tipo da imagem (featured_image ou gallery_images[])
        in: query
        name: type
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Image'
            type: array
        "400":
          description: Tipo de imagem inválido
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Imagens não encontradas
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao buscar imagens
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter imagens do produto por tipo
      tags:
      - Images
  /images/name/{name}:
    get:
      description: Obtém uma imagem específica pelo nome
      parameters:
      - description: Nome da imagem
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Image'
        "404":
          description: Imagem não encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao buscar imagem
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter imagem por nome
      tags:
      - Images
  /products:
    get:
      description: Obtém todos os produtos
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Product'
            type: array
      summary: Obter todos os produtos
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Cria um novo produto no banco de dados
      parameters:
      - description: Dados do produto
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/controllers.ProductCreate'
      produces:
      - application/json
      responses:
        "200":
          description: Produto criado com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Dados inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao criar produto
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Criar um novo produto
      tags:
      - Products
  /products/{sku}:
    get:
      description: Obtém um produto com base no SKU
      parameters:
      - description: SKU do produto
        in: path
        name: sku
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Product'
        "404":
          description: Produto não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao buscar produto
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter produto por SKU
      tags:
      - Products
  /products/category/{category_name}:
    get:
      description: Obtém todos os produtos de uma categoria específica pelo nome da
        categoria com paginação
      parameters:
      - description: Nome da Categoria
        in: path
        name: category_name
        required: true
        type: string
      - default: 1
        description: Número da página
        in: query
        name: page
        type: integer
      - default: 10
        description: Limite de itens por página
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Product'
            type: array
        "500":
          description: Erro ao buscar produtos
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter produtos por nome da categoria com paginação
      tags:
      - Products
  /products/category/id/{category_id}:
    get:
      description: Obtém todos os produtos de uma categoria específica pelo ID da
        categoria com paginação
      parameters:
      - description: ID da Categoria
        in: path
        name: category_id
        required: true
        type: integer
      - default: 1
        description: Número da página
        in: query
        name: page
        type: integer
      - default: 10
        description: Limite de itens por página
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Product'
            type: array
        "500":
          description: Erro ao buscar produtos
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter produtos por ID da categoria com paginação
      tags:
      - Products
  /products/home:
    get:
      description: Obtém todos os produtos com imagens em destaque
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Product'
            type: array
      summary: Obter todos os produtos em destaque
      tags:
      - Products
  /products/id/{id}:
    delete:
      description: Exclui um produto com base no ID
      parameters:
      - description: ID do produto
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Produto excluído com sucesso
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Produto não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao excluir produto
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Excluir produto por ID
      tags:
      - Products
    get:
      description: Obtém um produto com base no ID
      parameters:
      - description: ID do produto
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Product'
        "404":
          description: Produto não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao buscar produto
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter produto por ID
      tags:
      - Products
    patch:
      consumes:
      - application/json
      description: Atualiza parcialmente os dados de um produto existente. Envie apenas
        os campos que deseja atualizar.
      parameters:
      - description: ID do produto
        in: path
        name: id
        required: true
        type: integer
      - description: Dados do produto para atualização (campos opcionais)
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/controllers.ProductUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Produto atualizado com sucesso
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Dados inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Produto não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao atualizar produto
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualizar produto por ID (parcial)
      tags:
      - Products
  /products/user/{user_id}:
    get:
      description: Obtém todos os produtos associados a um usuário específico
      parameters:
      - description: ID do Usuário
        in: path
        name: user_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Product'
            type: array
        "500":
          description: Erro ao buscar produtos
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter todos os produtos por ID do usuário
      tags:
      - Products
  /roles:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Role'
            type: array
      summary: Lista todas as Roles
      tags:
      - Roles
    post:
      consumes:
      - application/json
      parameters:
      - description: Dados da nova Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/controllers.Role'
      produces:
      - application/json
      responses:
        "201":
          description: Role criada com sucesso
          schema:
            $ref: '#/definitions/controllers.Role'
        "400":
          description: Dados de entrada inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao criar Role
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria uma nova Role
      tags:
      - Roles
  /roles/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID da role
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Role deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Role not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to delete role
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deleta uma role pelo ID
      tags:
      - Roles
    get:
      consumes:
      - application/json
      parameters:
      - description: ID da role
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Role'
        "404":
          description: Role não encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Falha ao buscar role
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Busca uma role pelo ID
      tags:
      - Roles
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID da Role
        in: path
        name: id
        required: true
        type: integer
      - description: Dados da Role para atualização parcial
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/controllers.Role'
      produces:
      - application/json
      responses:
        "200":
          description: Role atualizada com sucesso
          schema:
            $ref: '#/definitions/controllers.Role'
        "400":
          description: ID inválido ou dados de entrada inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Role não encontrada
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao atualizar Role
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualiza parcialmente uma Role pelo ID
      tags:
      - Roles
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.User'
            type: array
      summary: Lista todos os usuários
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Este endpoint cria um novo usuário
      parameters:
      - description: Dados do usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.User'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: User created successfully'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'error: Invalid request body'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Failed to create user'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cria um novo usuário
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to delete user
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Exclui um usuário pelo ID
      tags:
      - Users
    get:
      consumes:
      - application/json
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.User'
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to fetch user
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retorna um usuário pelo ID
      tags:
      - Users
    patch:
      consumes:
      - application/json
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      - description: Dados do usuário a serem atualizados
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.User'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update user
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualiza parcialmente os dados de um usuário pelo ID
      tags:
      - Users
  /users/details/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.UserDetails'
        "404":
          description: Detalhes do usuário não encontrados
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Falha ao buscar detalhes do usuário
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retorna os detalhes de um usuário pelo ID
      tags:
      - Users
  /vendors:
    get:
      description: Obtém todos os vendors
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.Vendor'
            type: array
        "500":
          description: Erro ao buscar vendors
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter todos os vendors
      tags:
      - Vendors
    post:
      consumes:
      - application/json
      description: Cria um novo vendor
      parameters:
      - description: Vendor para criar
        in: body
        name: vendor
        required: true
        schema:
          $ref: '#/definitions/controllers.Vendor'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.Vendor'
        "400":
          description: Erro ao criar vendor
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao criar vendor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Criar um novo vendor
      tags:
      - Vendors
  /vendors/{id}:
    delete:
      description: Deleta um vendor específico pelo ID
      parameters:
      - description: ID do Vendor
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Vendor deletado com sucesso
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Vendor não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao deletar vendor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deletar vendor por ID
      tags:
      - Vendors
    get:
      description: Obtém um vendor específico pelo ID
      parameters:
      - description: ID do Vendor
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Vendor'
        "404":
          description: Vendor não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao buscar vendor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter vendor por ID
      tags:
      - Vendors
    patch:
      consumes:
      - application/json
      description: Atualiza um vendor específico pelo ID (permite atualizações parciais)
      parameters:
      - description: ID do Vendor
        in: path
        name: id
        required: true
        type: integer
      - description: Dados do vendor para atualizar
        in: body
        name: vendor
        required: true
        schema:
          $ref: '#/definitions/controllers.Vendor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Vendor'
        "400":
          description: Erro ao analisar requisição
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Vendor não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao atualizar vendor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Atualizar vendor por ID
      tags:
      - Vendors
  /vendors/user/{users_id}:
    get:
      description: Obtém um vendor específico pelo users_id
      parameters:
      - description: ID do Usuário
        in: path
        name: users_id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.Vendor'
        "404":
          description: Vendor não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro ao buscar vendor
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter vendor por User ID
      tags:
      - Vendors
swagger: "2.0"
